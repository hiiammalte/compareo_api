# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

input CreateProjectInput {
  description: String!
  title: String!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type Error {
  message: String!
}

type Mutation {
  createProject(options: CreateProjectInput!): ProjectCreatedResponse!
  deleteUser(id: String!): UserSuccessResponse!
  login(options: UsernamePasswordInput!): UserTokenResponse!
  logout: UserSuccessResponse!
  refreshAccess: UserTokenResponse!
  register(options: RegistrationInput!): UserCreatedResponse!
  revokeAccess(userId: String!): UserSuccessResponse!
}

interface MutationResponse {
  errors: [Error!]
}

"""The Project model"""
type Project {
  """Project creation date"""
  createdAt: DateTime
  creator: User!
  id: ID!
  title: String!

  """Project last update date"""
  updatedAt: DateTime
}

type ProjectCreatedResponse implements MutationResponse {
  errors: [Error!]
  id: String
}

type Query {
  projects: [Project!]!
  user(id: String!): User
  users: [User!]!
}

input RegistrationInput {
  email: String!
  password: String!
  username: String!
}

"""The User model"""
type User {
  """User creation date"""
  createdAt: DateTime

  """User email to be used on login"""
  email: String!
  id: ID!

  """User last update date"""
  updatedAt: DateTime

  """User name"""
  username: String!
}

type UserCreatedResponse implements MutationResponse {
  errors: [Error!]
  id: String
}

type UserSuccessResponse implements MutationResponse {
  errors: [Error!]
  success: Boolean
}

type UserTokenResponse implements MutationResponse {
  errors: [Error!]
  token: String
}

input UsernamePasswordInput {
  email: String!
  password: String!
}
